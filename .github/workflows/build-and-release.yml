name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        node-version: [ 20.x ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: release/${{github.ref_name}}

  create_release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref_name}}
          release_name: Release ${{github.ref_name}}
          draft: false
          prerelease: false

  upload_windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: release/${{github.ref_name}}/Bili-LiveLuckDraw-Windows-${{github.ref_name}}-Setup.exe
          asset_name: Bili-LiveLuckDraw-Windows-${{github.ref_name}}-Setup.exe
          asset_content_type: application/zip

  upload_linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: release/${{github.ref_name}}/Bili-LiveLuckDraw-Linux-${{github.ref_name}}.AppImage
          asset_name: Bili-LiveLuckDraw-Linux-${{github.ref_name}}.AppImage
          asset_content_type: application/zip
